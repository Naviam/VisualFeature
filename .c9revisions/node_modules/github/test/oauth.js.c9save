{"ts":1380254449354,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/** section: github, internal\n *  OAuth\n * \n *  OAuth usage example.\n * \n *  Copyright 2012 Cloud9 IDE, Inc.\n *\n *  This product includes software developed by\n *  Cloud9 IDE, Inc (http://c9.io).\n *\n *  Author: Mike de Boer <mike@c9.io>\n **/\n\nvar http = require(\"http\");\nvar Url = require(\"url\");\nvar querystring = require(\"querystring\");\n\nvar Client = require(\"../index\");\nvar OAuth2 = require(\"oauth\").OAuth2;\n\nvar github = new Client({\n    version: \"3.0.0\"\n});\n\nvar clientId = \"e8c434a1c92e9de7ff8d\";\nvar secret = \"1d0fcbb060e1dd86a0aa3d12265419c9bb19a333\";\nvar oauth = new OAuth2(clientId, secret, \"https://github.com/\", \"login/oauth/authorize\", \"login/oauth/access_token\");\n\n// for demo purposes use one global access token\n// in production this has to be stored in a user session\nvar accessToken = \"\";\n\nhttp.createServer(function(req, res) {\n    var url = Url.parse(req.url);\n    var path = url.pathname;\n    var query = querystring.parse(url.query);\n    \n    if (path == \"/\" || path.match(/^\\/user\\/?$/)) {\n        // redirect to github if there is no access token\n        if (!accessToken) {\n            res.writeHead(303, {\n                Location: oauth.getAuthorizeUrl({ \n                    redirect_uri: 'http://localhost:7878/github-callback',\n                    scope: \"user,repo,gist\"\n                })\n            });\n            res.end();\n            return;\n        }\n                \n        // use github API            \n        github.user.get({}, function(err, user) {\n            if (err) {\n                res.writeHead(err.code);\n                res.end(err + \"\");\n                return;\n            }\n            res.writeHead(200);\n            res.end(JSON.stringify(user));\n        });\n        return;\n    } \n    // URL called by github after authenticating\n    else if (path.match(/^\\/github-callback\\/?$/)) {\n        // upgrade the code to an access token\n        oauth.getOAuthAccessToken(query.code, {}, function (err, access_token, refresh_token) {\n            if (err) {\n                console.log(err);\n                res.writeHead(500);\n                res.end(err + \"\");\n                return;\n            }\n            \n            accessToken = access_token;\n            \n            // authenticate github API\n            github.authenticate({\n                type: \"oauth\",\n                token: accessToken\n            });\n              \n            //redirect back\n            res.writeHead(303, {\n                Location: \"/\"\n            });\n            res.end();\n        });\n        return;\n    }\n\n    res.writeHead(404);\n    res.end(\"404 - Not found\");\n}).listen(7878);\n\nconsole.log(\"listening at http://localhost:7878\");\n"]],"start1":0,"start2":0,"length1":0,"length2":2680}]],"length":2680}
